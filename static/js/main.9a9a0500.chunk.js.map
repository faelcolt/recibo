{"version":3,"sources":["images/cabecalho.jpeg","Recibo.js","serviceWorker.js","index.js"],"names":["module","exports","Cabecalho","p2","p","data","Date","ano","getFullYear","mes","getMonth","dia","getDate","hoje","style","display","htmlFor","type","name","id","flex","minWidth","defaultValue","marginLeft","Tabela","linhas","i","push","Linha","overflow","marginTop","width","className","colSpan","scope","textAlign","Recibo","class","onClick","window","print","src","cabeçalho","alt","Boolean","location","hostname","match","ReactDOM","render","document","getElementById","navigator","serviceWorker","ready","then","registration","unregister"],"mappings":"oFAAAA,EAAOC,QAAU,IAA0B,wC,8KC2B3C,SAASC,IACL,IAAMC,EAAK,SAAAC,GAAC,OAAKA,EAAI,GAAK,IAAMA,EAAIA,GAE9BC,EAAO,IAAIC,KACXC,EAAMF,EAAKG,cACXC,EAAMN,EAAGE,EAAKK,WAAa,GAC3BC,EAAMR,EAAGE,EAAKO,WACdC,EAAI,UAAMF,EAAN,YAAaF,EAAb,YAAoBF,GAE9B,OACI,oCACI,yBAAKO,MAAO,CAAEC,QAAS,SACnB,2BAAOC,QAAQ,QAAf,aACA,2BAAOC,KAAK,OAAOC,KAAK,OAAOC,GAAG,OAAOL,MAAO,CAAEM,KAAM,MAG5D,yBAAKN,MAAO,CAAEC,QAAS,SACnB,2BAAOC,QAAQ,eAAf,iBACA,2BACIC,KAAK,OACLC,KAAK,cACLC,GAAG,cACHL,MAAO,CAAEM,KAAM,MAIvB,yBAAKN,MAAO,CAAEC,QAAS,SACnB,2BAAOC,QAAQ,YAAf,cACA,2BACIC,KAAK,MACLC,KAAK,WACLC,GAAG,WACHL,MAAO,CAAEO,SAAU,QAASD,KAAM,cAGtC,2BACIH,KAAK,OACLC,KAAK,OACLC,GAAG,OACHG,aAAcT,EACdC,MAAO,CAAEO,SAAU,OAAQE,WAAY,WAO3D,SAASC,IAEL,IADA,IAAMC,EAAS,GACNC,EAAI,EAAGA,EAAI,GAAIA,IACpBD,EAAOE,KAAK,kBAACC,EAAD,OAEhB,OACI,yBAAKd,MAAO,CAAEe,SAAU,OAAQC,UAAW,QACvC,+BACI,kCACI,yBAAKhB,MAAO,CAAEiB,MAAO,SACrB,8BACA,yBAAKjB,MAAO,CAAEiB,MAAO,SACrB,yBAAKjB,MAAO,CAAEiB,MAAO,UAEzB,+BACI,4BACI,wBAAIC,UAAU,iBAAd,QACA,+CACA,wBAAIA,UAAU,iBAAd,qBACA,wBAAIA,UAAU,iBAAd,iBAGR,+BAAQP,GACR,+BACI,4BACI,wBACIQ,QAAQ,IACRC,MAAM,MACNpB,MAAO,CAAEqB,UAAW,UAHxB,eAOA,4BACI,2BAAOH,UAAU,uBAS7C,SAASJ,IACL,OACI,4BACI,4BACI,2BAAOX,KAAK,OAAOe,UAAU,mBAEjC,4BACI,2BAAOf,KAAK,UAEhB,4BACI,2BAAOA,KAAK,OAAOe,UAAU,mBAEjC,4BACI,2BAAOf,KAAK,OAAOe,UAAU,oBAM9BI,MAnIf,WACI,OACI,yBAAKC,MAAM,QACP,4BAAQlB,GAAG,WAAWmB,QAAS,kBAAMC,OAAOC,UAA5C,YAIA,2BAAOvB,KAAK,OAAOC,KAAK,SAASJ,MAAO,CAAEC,QAAS,UAEnD,yBAAKD,MAAO,CAAEiB,MAAO,SACjB,yBACIjB,MAAO,CAAEiB,MAAO,QAChBU,IAAKC,IACLC,IAAI,4BAIZ,kBAACzC,EAAD,MACA,kBAACsB,EAAD,QCVQoB,QACW,cAA7BL,OAAOM,SAASC,UAEe,UAA7BP,OAAOM,SAASC,UAEhBP,OAAOM,SAASC,SAASC,MACvB,2DCZNC,IAASC,OAAO,kBAAC,EAAD,MAAYC,SAASC,eAAe,SD6H9C,kBAAmBC,WACrBA,UAAUC,cAAcC,MAAMC,MAAK,SAAAC,GACjCA,EAAaC,kB","file":"static/js/main.9a9a0500.chunk.js","sourcesContent":["module.exports = __webpack_public_path__ + \"static/media/cabecalho.e4122c13.jpeg\";","import React from 'react';\r\nimport './Recibo.css';\r\nimport cabeçalho from './images/cabecalho.jpeg';\r\n\r\nfunction Recibo() {\r\n    return (\r\n        <div class='main'>\r\n            <button id='imprimir' onClick={() => window.print()}>\r\n                Imprimir\r\n            </button>\r\n\r\n            <input type='file' name='imagem' style={{ display: 'none' }} />\r\n\r\n            <div style={{ width: '100%' }}>\r\n                <img\r\n                    style={{ width: '100%' }}\r\n                    src={cabeçalho}\r\n                    alt='Imagem do Cabeçalho'\r\n                />\r\n            </div>\r\n\r\n            <Cabecalho />\r\n            <Tabela />\r\n        </div>\r\n    );\r\n}\r\n\r\nfunction Cabecalho() {\r\n    const p2 = p => (p < 10 ? '0' + p : p);\r\n\r\n    const data = new Date();\r\n    const ano = data.getFullYear();\r\n    const mes = p2(data.getMonth() + 1);\r\n    const dia = p2(data.getDate());\r\n    const hoje = `${dia}/${mes}/${ano}`;\r\n\r\n    return (\r\n        <>\r\n            <div style={{ display: 'flex' }}>\r\n                <label htmlFor='nome'>Cliente: </label>\r\n                <input type='text' name='nome' id='nome' style={{ flex: 1 }} />\r\n            </div>\r\n\r\n            <div style={{ display: 'flex' }}>\r\n                <label htmlFor='endereço'>Endereço: </label>\r\n                <input\r\n                    type='text'\r\n                    name='endereço'\r\n                    id='endereço'\r\n                    style={{ flex: 1 }}\r\n                />\r\n            </div>\r\n\r\n            <div style={{ display: 'flex' }}>\r\n                <label htmlFor='telefone'>Telefone: </label>\r\n                <input\r\n                    type='tel'\r\n                    name='telefone'\r\n                    id='telefone'\r\n                    style={{ minWidth: '120px', flex: '1 1 100%' }}\r\n                />\r\n\r\n                <input\r\n                    type='text'\r\n                    name='data'\r\n                    id='data'\r\n                    defaultValue={hoje}\r\n                    style={{ minWidth: '85px', marginLeft: '4px' }}\r\n                />\r\n            </div>\r\n        </>\r\n    );\r\n}\r\n\r\nfunction Tabela() {\r\n    const linhas = [];\r\n    for (let i = 0; i < 18; i++) {\r\n        linhas.push(<Linha />);\r\n    }\r\n    return (\r\n        <div style={{ overflow: 'auto', marginTop: '8px' }}>\r\n            <table>\r\n                <colgroup>\r\n                    <col style={{ width: '10%' }} />\r\n                    <col />\r\n                    <col style={{ width: '20%' }} />\r\n                    <col style={{ width: '20%' }} />\r\n                </colgroup>\r\n                <thead>\r\n                    <tr>\r\n                        <th className='number-format'>Qtd.</th>\r\n                        <th>Descrição</th>\r\n                        <th className='number-format'>Valor Unitário</th>\r\n                        <th className='number-format'>Valor Total</th>\r\n                    </tr>\r\n                </thead>\r\n                <tbody>{linhas}</tbody>\r\n                <tfoot>\r\n                    <tr>\r\n                        <th\r\n                            colSpan='3'\r\n                            scope='row'\r\n                            style={{ textAlign: 'right' }}\r\n                        >\r\n                            Total Geral\r\n                        </th>\r\n                        <td>\r\n                            <input className='number-format' />\r\n                        </td>\r\n                    </tr>\r\n                </tfoot>\r\n            </table>\r\n        </div>\r\n    );\r\n}\r\n\r\nfunction Linha() {\r\n    return (\r\n        <tr>\r\n            <td>\r\n                <input type='text' className='number-format' />\r\n            </td>\r\n            <td>\r\n                <input type='text' />\r\n            </td>\r\n            <td>\r\n                <input type='text' className='number-format' />\r\n            </td>\r\n            <td>\r\n                <input type='text' className='number-format' />\r\n            </td>\r\n        </tr>\r\n    );\r\n}\r\n\r\nexport default Recibo;\r\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' }\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport Recibo from './Recibo';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(<Recibo />, document.getElementById('root'));\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}